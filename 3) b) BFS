//BFS 
#include <iostream>
#include <queue>

using namespace std;

int main() {
    int n, a[20][20], i, j, visited[20], source;

    cout << "Enter the number of vertices:";
    cin >> n;

    cout << "\nEnter the adjacency matrix:\n";
    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            cin >> a[i][j];

    for (i = 1; i <= n; i++)
        visited[i] = 0;

    cout << "\nEnter the source node:";
    cin >> source;

    visited[source] = 1;
    BFS(a, source, visited, n);

    for (i = 1; i <= n; i++) {
        if (visited[i] != 0)
            cout << "\n Node " << i << " is reachable";
        else
            cout << "\n Node " << i << " is not reachable";
    }

    return 0;
}

void BFS(int a[20][20], int source, int visited[20], int n) {
    queue<int> q;
    q.push(source);

    while (!q.empty()) {
        int x = q.front();
        q.pop();

        for (int k = 1; k <= n; k++) {
            if (a[x][k] == 1 && visited[k] == 0) {
                q.push(k);
                visited[k] = 1;
            }
        }
    }
}
